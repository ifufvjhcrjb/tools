const axios = require("axios");
const readline = require("readline");

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// ASCII ART ditaruh di awal
console.log(`

                                         .                                            
                                        ...                                           
                                        ...                                           
                                        ...                                           
                                        ...                                           
                                        ...                                           
                                        ...                                           
                                        ....                                          
                                        ....                                          
                                        ....                                          
                                        ....                                          
                                        .. .                                          
                                        ....                                          
                                        ....                                          
                                        ....                                          
                                        ....                                          
                                         ...                                          
                                         ...                                          
                                         ...                                          
                                         ...                                          
                                         ...                                          
                                         ...                                          
                                         ....                                         
                                         ....                                         
                                        ......                                        
                                        ......                                        
                                        ......                                        
                                         .  ..                                        
                                       .......                                        
                                       .......                                        
                                  .    .......                                        
                                 ..    ......                                         
                                ...     ..... .....                                   
                          ........      ..... ......                                  
                    ..  .......  ....   ..... ..  ..                                  
                   ...................  ..... . .......                               
                   .......... ........  ..... . .......                               
                   . ........ ........  ..... . .......                               
                  ... ......  ......... ..... .. ...... ...                           
                 ..... ....   ...... .. ..... .. ....  .....                          
                 ......       ..... ...  .... ..  .... .  ..                          
                  .......     ..... ...  .... ..  .... . ....                         
                  .......     ..... ...  .... ..  ....  .....                         
                   .....      .....  ..  ....  .   ...  .....                         
                   ....       .....  ..  .... ...  ...  .....                         
                   ....       .....  ..  ....  ..  .... ......                        
                    ...       ..... ...  ....   .  .... . ....                        
                    ...       ....  ..   ....    . ....... ...                        
                    ...       ....  ..   .....     ..... .  ...                       
                    ...      ..... ..    .....     .....    ....                      
                     ..     .......     ........  .......   .....                     
                     ..    ........     ........ .........  ......                    
                     ..    .........   ......... ......... ........                   
                     ..   ........... .......... .......... .......                   
                     ..   ........... .... ..... ...   .... .......                   
                     ...   ....   ...  . .......    ....  . .                         
                    .....      .......  ......... .........  .... ..                  
                    ......  .......... .......... ......... ........                  
                   ....... ...................... ......... ........                  
                   ..   ..  ..................... ......... ........                  
                   .......  .......... .........  ......... .........                 
                   .......   ......... ........   ......... .........                 
                   ........   ........  ......   .........  ........                  
                   ........    .......  ......   .......   ........                   
                    .......     .....   ......   ......  .........                    
                     ......     .....    .....  ......   .......                      
                      .....     .....    ....  ......   ......                        
                       .....    ......   ....  .....    .....                         
                        .....    .....   ...  ......   .....                          
                        .......  ...... .... ......   .....                           
                         ....... ........... ..... .......                            
                          ........................ ......                             
                          ....... ........... ...........                             
                           ...... ........ .  ...........                             
                           ... ..  ... ..... .....  .  ..                             
                            .. .. ..   ..... ..... . ...                              
                            ..................... .....                               
                             ...................  ....                                
                                .. ............  ...                                  
                                 ..... .......  ...                                   
                                     . .. ... ...                                     
                                              .                                       
                                                                                                                                            
     NGL SPAMMER by KUROKAII 
-----------------------------------------
`);

function ask(question) {
    return new Promise(resolve => rl.question(question + "\n", resolve));
}

(async () => {
    const username = await ask("Masukkan username NGL:");
    console.log(` Username: ${username}\n`);

    const messagesInput = await ask("Masukkan pesan (pisahkan dengan koma):");
    console.log(` Pesan: ${messagesInput}\n`);

    const jumlah = parseInt(await ask("Masukkan jumlah pesan:"));
    console.log(` Jumlah: ${jumlah}\n`);

    const delay = parseFloat(await ask("Masukkan delay (detik):"));
    console.log(` Delay: ${delay} detik\n`);

    const messages = messagesInput.split(",").map(msg => msg.trim());
    rl.close();

    console.log(
        `\nMengirim ${jumlah} pesan ke @${username} dengan delay ${delay} detik...\n`
    );

    let sukses = 0;
    let gagal = 0;

    for (let i = 0; i < jumlah; i++) {
        const randomMessage =
            messages[Math.floor(Math.random() * messages.length)];

        try {
            await axios.post(`https://ngl.link/api/submit`, {
                username: username,
                question: randomMessage,
                deviceId: Math.random().toString(36).substring(2, 15)
            });

            sukses++;
            console.log(`(${i + 1}/${jumlah})  Terkirim: ${randomMessage}`);
        } catch (err) {
            gagal++;
            console.error(`(${i + 1}/${jumlah})  Gagal: ${err.message}`);
        }

        await new Promise(res => setTimeout(res, delay * 1000));
    }

    console.log(`\n${sukses} terkirim `);
    console.log(`${gagal} gagal `);
})();
